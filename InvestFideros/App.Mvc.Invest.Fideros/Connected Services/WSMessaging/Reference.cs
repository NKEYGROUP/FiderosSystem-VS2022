//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSMessaging
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailMessage", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailMessage : object
    {
        
        private System.Nullable<long> CampaignIDField;
        
        private System.Nullable<System.DateTime> CreationDateField;
        
        private string CreatorField;
        
        private long IDField;
        
        private System.Nullable<bool> IsBodyHTMLField;
        
        private System.Nullable<bool> IsProcessingField;
        
        private System.Nullable<bool> IsReadyToSendField;
        
        private string MailBCCField;
        
        private string MailBodyEncodingField;
        
        private string MailBodyHTMLField;
        
        private string MailBodyTEXTField;
        
        private string MailCCField;
        
        private string MailDeliveryOptionsField;
        
        private string MailFromField;
        
        private string MailMessageCodeField;
        
        private string MailPriorityField;
        
        private string MailReplyToField;
        
        private System.Nullable<bool> MailSendErrorField;
        
        private string MailSendErrorDescriptionField;
        
        private string MailSenderField;
        
        private long MailServiceIDField;
        
        private string MailSubjectField;
        
        private string MailSubjectEncodingField;
        
        private string MailToField;
        
        private System.Nullable<System.DateTime> ModificationDateField;
        
        private string ModifierField;
        
        private System.Nullable<long> NberRecipientField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CampaignID
        {
            get
            {
                return this.CampaignIDField;
            }
            set
            {
                this.CampaignIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return this.CreatorField;
            }
            set
            {
                this.CreatorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsBodyHTML
        {
            get
            {
                return this.IsBodyHTMLField;
            }
            set
            {
                this.IsBodyHTMLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProcessing
        {
            get
            {
                return this.IsProcessingField;
            }
            set
            {
                this.IsProcessingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsReadyToSend
        {
            get
            {
                return this.IsReadyToSendField;
            }
            set
            {
                this.IsReadyToSendField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBCC
        {
            get
            {
                return this.MailBCCField;
            }
            set
            {
                this.MailBCCField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBodyEncoding
        {
            get
            {
                return this.MailBodyEncodingField;
            }
            set
            {
                this.MailBodyEncodingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBodyHTML
        {
            get
            {
                return this.MailBodyHTMLField;
            }
            set
            {
                this.MailBodyHTMLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBodyTEXT
        {
            get
            {
                return this.MailBodyTEXTField;
            }
            set
            {
                this.MailBodyTEXTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailCC
        {
            get
            {
                return this.MailCCField;
            }
            set
            {
                this.MailCCField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailDeliveryOptions
        {
            get
            {
                return this.MailDeliveryOptionsField;
            }
            set
            {
                this.MailDeliveryOptionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailFrom
        {
            get
            {
                return this.MailFromField;
            }
            set
            {
                this.MailFromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailMessageCode
        {
            get
            {
                return this.MailMessageCodeField;
            }
            set
            {
                this.MailMessageCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailPriority
        {
            get
            {
                return this.MailPriorityField;
            }
            set
            {
                this.MailPriorityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailReplyTo
        {
            get
            {
                return this.MailReplyToField;
            }
            set
            {
                this.MailReplyToField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MailSendError
        {
            get
            {
                return this.MailSendErrorField;
            }
            set
            {
                this.MailSendErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailSendErrorDescription
        {
            get
            {
                return this.MailSendErrorDescriptionField;
            }
            set
            {
                this.MailSendErrorDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailSender
        {
            get
            {
                return this.MailSenderField;
            }
            set
            {
                this.MailSenderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailServiceID
        {
            get
            {
                return this.MailServiceIDField;
            }
            set
            {
                this.MailServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailSubject
        {
            get
            {
                return this.MailSubjectField;
            }
            set
            {
                this.MailSubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailSubjectEncoding
        {
            get
            {
                return this.MailSubjectEncodingField;
            }
            set
            {
                this.MailSubjectEncodingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailTo
        {
            get
            {
                return this.MailToField;
            }
            set
            {
                this.MailToField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModificationDate
        {
            get
            {
                return this.ModificationDateField;
            }
            set
            {
                this.ModificationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier
        {
            get
            {
                return this.ModifierField;
            }
            set
            {
                this.ModifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NberRecipient
        {
            get
            {
                return this.NberRecipientField;
            }
            set
            {
                this.NberRecipientField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailMessageAttachment", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailMessageAttachment : object
    {
        
        private long IDField;
        
        private string MailAttachmentFileNameField;
        
        private byte[] MailAttachmentStreamField;
        
        private long MailIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAttachmentFileName
        {
            get
            {
                return this.MailAttachmentFileNameField;
            }
            set
            {
                this.MailAttachmentFileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MailAttachmentStream
        {
            get
            {
                return this.MailAttachmentStreamField;
            }
            set
            {
                this.MailAttachmentStreamField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailID
        {
            get
            {
                return this.MailIDField;
            }
            set
            {
                this.MailIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailAttachmentFileName", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailAttachmentFileName : object
    {
        
        private long IDField;
        
        private string MailAttachmentFileNameField;
        
        private long MailIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAttachmentFileName
        {
            get
            {
                return this.MailAttachmentFileNameField;
            }
            set
            {
                this.MailAttachmentFileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailID
        {
            get
            {
                return this.MailIDField;
            }
            set
            {
                this.MailIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailMessageHeaders", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailMessageHeaders : object
    {
        
        private long IDField;
        
        private string MailHeaderNameField;
        
        private string MailHeaderValueField;
        
        private long MailIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailHeaderName
        {
            get
            {
                return this.MailHeaderNameField;
            }
            set
            {
                this.MailHeaderNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailHeaderValue
        {
            get
            {
                return this.MailHeaderValueField;
            }
            set
            {
                this.MailHeaderValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailID
        {
            get
            {
                return this.MailIDField;
            }
            set
            {
                this.MailIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailMessageAlternateViews", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailMessageAlternateViews : object
    {
        
        private long IDField;
        
        private string MailAlternateViewFileNameField;
        
        private byte[] MailAlternateViewStreamField;
        
        private long MailIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAlternateViewFileName
        {
            get
            {
                return this.MailAlternateViewFileNameField;
            }
            set
            {
                this.MailAlternateViewFileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MailAlternateViewStream
        {
            get
            {
                return this.MailAlternateViewStreamField;
            }
            set
            {
                this.MailAlternateViewStreamField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailID
        {
            get
            {
                return this.MailIDField;
            }
            set
            {
                this.MailIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailRecipient", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailRecipient : object
    {
        
        private string Attribut1Field;
        
        private string Attribut2Field;
        
        private string Attribut3Field;
        
        private string Attribut4Field;
        
        private string Attribut5Field;
        
        private long IDField;
        
        private long MailIDField;
        
        private string RecipientAddressField;
        
        private string RecipientNameField;
        
        private System.DateTime SendDateField;
        
        private string SendStatusField;
        
        private System.Nullable<System.DateTime> StatusDateField;
        
        private string StatusDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribut1
        {
            get
            {
                return this.Attribut1Field;
            }
            set
            {
                this.Attribut1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribut2
        {
            get
            {
                return this.Attribut2Field;
            }
            set
            {
                this.Attribut2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribut3
        {
            get
            {
                return this.Attribut3Field;
            }
            set
            {
                this.Attribut3Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribut4
        {
            get
            {
                return this.Attribut4Field;
            }
            set
            {
                this.Attribut4Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attribut5
        {
            get
            {
                return this.Attribut5Field;
            }
            set
            {
                this.Attribut5Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailID
        {
            get
            {
                return this.MailIDField;
            }
            set
            {
                this.MailIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientAddress
        {
            get
            {
                return this.RecipientAddressField;
            }
            set
            {
                this.RecipientAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientName
        {
            get
            {
                return this.RecipientNameField;
            }
            set
            {
                this.RecipientNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDate
        {
            get
            {
                return this.SendDateField;
            }
            set
            {
                this.SendDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendStatus
        {
            get
            {
                return this.SendStatusField;
            }
            set
            {
                this.SendStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatusDate
        {
            get
            {
                return this.StatusDateField;
            }
            set
            {
                this.StatusDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription
        {
            get
            {
                return this.StatusDescriptionField;
            }
            set
            {
                this.StatusDescriptionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailServiceParameter", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailServiceParameter : object
    {
        
        private System.Nullable<bool> ActiveField;
        
        private string AgentIdentifierField;
        
        private System.Nullable<System.DateTime> CreationDateField;
        
        private string CreatorField;
        
        private string DkimSelectorField;
        
        private string DomainField;
        
        private System.Nullable<bool> EnabledSSLField;
        
        private System.Nullable<System.Guid> GuidField;
        
        private long IDField;
        
        private string IsProcessingField;
        
        private System.Nullable<long> MailQuotaField;
        
        private System.Nullable<long> MailSentField;
        
        private System.Nullable<System.DateTime> ModificationDateField;
        
        private string ModifierField;
        
        private string OwnerReferenceField;
        
        private string PrivateKeyFileNameField;
        
        private string SLACodeField;
        
        private string SenderAddressField;
        
        private string SenderNameField;
        
        private string SenderReplyAddressField;
        
        private string SenderReplyNameField;
        
        private string ServiceStatusField;
        
        private string ServiceTypeField;
        
        private string SmtpServerField;
        
        private string SmtpServerIdentifierField;
        
        private string SmtpServerPasswordField;
        
        private string SmtpServerPortField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active
        {
            get
            {
                return this.ActiveField;
            }
            set
            {
                this.ActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentIdentifier
        {
            get
            {
                return this.AgentIdentifierField;
            }
            set
            {
                this.AgentIdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return this.CreatorField;
            }
            set
            {
                this.CreatorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DkimSelector
        {
            get
            {
                return this.DkimSelectorField;
            }
            set
            {
                this.DkimSelectorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                this.DomainField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnabledSSL
        {
            get
            {
                return this.EnabledSSLField;
            }
            set
            {
                this.EnabledSSLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Guid
        {
            get
            {
                return this.GuidField;
            }
            set
            {
                this.GuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsProcessing
        {
            get
            {
                return this.IsProcessingField;
            }
            set
            {
                this.IsProcessingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MailQuota
        {
            get
            {
                return this.MailQuotaField;
            }
            set
            {
                this.MailQuotaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MailSent
        {
            get
            {
                return this.MailSentField;
            }
            set
            {
                this.MailSentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModificationDate
        {
            get
            {
                return this.ModificationDateField;
            }
            set
            {
                this.ModificationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier
        {
            get
            {
                return this.ModifierField;
            }
            set
            {
                this.ModifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerReference
        {
            get
            {
                return this.OwnerReferenceField;
            }
            set
            {
                this.OwnerReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateKeyFileName
        {
            get
            {
                return this.PrivateKeyFileNameField;
            }
            set
            {
                this.PrivateKeyFileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLACode
        {
            get
            {
                return this.SLACodeField;
            }
            set
            {
                this.SLACodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress
        {
            get
            {
                return this.SenderAddressField;
            }
            set
            {
                this.SenderAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderName
        {
            get
            {
                return this.SenderNameField;
            }
            set
            {
                this.SenderNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderReplyAddress
        {
            get
            {
                return this.SenderReplyAddressField;
            }
            set
            {
                this.SenderReplyAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderReplyName
        {
            get
            {
                return this.SenderReplyNameField;
            }
            set
            {
                this.SenderReplyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceStatus
        {
            get
            {
                return this.ServiceStatusField;
            }
            set
            {
                this.ServiceStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType
        {
            get
            {
                return this.ServiceTypeField;
            }
            set
            {
                this.ServiceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServer
        {
            get
            {
                return this.SmtpServerField;
            }
            set
            {
                this.SmtpServerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServerIdentifier
        {
            get
            {
                return this.SmtpServerIdentifierField;
            }
            set
            {
                this.SmtpServerIdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServerPassword
        {
            get
            {
                return this.SmtpServerPasswordField;
            }
            set
            {
                this.SmtpServerPasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServerPort
        {
            get
            {
                return this.SmtpServerPortField;
            }
            set
            {
                this.SmtpServerPortField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEmailingCampaign", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOEmailingCampaign : object
    {
        
        private System.Nullable<System.DateTime> CreationDateField;
        
        private string CreatorField;
        
        private string DescriptionField;
        
        private System.Nullable<System.DateTime> EndDateField;
        
        private long IDField;
        
        private System.Nullable<bool> IsClosedField;
        
        private System.Nullable<bool> IsProcessingField;
        
        private long MailServiceIDField;
        
        private System.Nullable<System.DateTime> ModificationDateField;
        
        private string ModifierField;
        
        private string NameField;
        
        private System.Nullable<long> NberMailSentField;
        
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return this.CreatorField;
            }
            set
            {
                this.CreatorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsClosed
        {
            get
            {
                return this.IsClosedField;
            }
            set
            {
                this.IsClosedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProcessing
        {
            get
            {
                return this.IsProcessingField;
            }
            set
            {
                this.IsProcessingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MailServiceID
        {
            get
            {
                return this.MailServiceIDField;
            }
            set
            {
                this.MailServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModificationDate
        {
            get
            {
                return this.ModificationDateField;
            }
            set
            {
                this.ModificationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier
        {
            get
            {
                return this.ModifierField;
            }
            set
            {
                this.ModifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NberMailSent
        {
            get
            {
                return this.NberMailSentField;
            }
            set
            {
                this.NberMailSentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMailRecipientSource", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTOMailRecipientSource : object
    {
        
        private long CampaignIDField;
        
        private System.Nullable<System.DateTime> CreationDateField;
        
        private string CreatorField;
        
        private System.Nullable<System.DateTime> DateToSendField;
        
        private byte[] FileStreamField;
        
        private long IDField;
        
        private System.Nullable<bool> IsFileField;
        
        private System.Nullable<bool> IsProcessedField;
        
        private System.Nullable<System.DateTime> ModificationDateField;
        
        private string ModifierField;
        
        private System.Nullable<long> NberRecipientField;
        
        private string SQLQueryField;
        
        private string SourceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CampaignID
        {
            get
            {
                return this.CampaignIDField;
            }
            set
            {
                this.CampaignIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return this.CreatorField;
            }
            set
            {
                this.CreatorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateToSend
        {
            get
            {
                return this.DateToSendField;
            }
            set
            {
                this.DateToSendField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileStream
        {
            get
            {
                return this.FileStreamField;
            }
            set
            {
                this.FileStreamField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsFile
        {
            get
            {
                return this.IsFileField;
            }
            set
            {
                this.IsFileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProcessed
        {
            get
            {
                return this.IsProcessedField;
            }
            set
            {
                this.IsProcessedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModificationDate
        {
            get
            {
                return this.ModificationDateField;
            }
            set
            {
                this.ModificationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier
        {
            get
            {
                return this.ModifierField;
            }
            set
            {
                this.ModifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NberRecipient
        {
            get
            {
                return this.NberRecipientField;
            }
            set
            {
                this.NberRecipientField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SQLQuery
        {
            get
            {
                return this.SQLQueryField;
            }
            set
            {
                this.SQLQueryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName
        {
            get
            {
                return this.SourceNameField;
            }
            set
            {
                this.SourceNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSMessaging.IWSMessaging")]
    public interface IWSMessaging
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CreateMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/CreateMailMessageResponse")]
        WSMessaging.DTOMailMessage CreateMailMessage(WSMessaging.DTOMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CreateMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/CreateMailMessageResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> CreateMailMessageAsync(WSMessaging.DTOMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/UpdateMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/UpdateMailMessageResponse")]
        WSMessaging.DTOMailMessage UpdateMailMessage(WSMessaging.DTOMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/UpdateMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/UpdateMailMessageResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> UpdateMailMessageAsync(WSMessaging.DTOMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/GetMailMessageResponse")]
        WSMessaging.DTOMailMessage GetMailMessage(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/GetMailMessageResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> GetMailMessageAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailMessageByCode", ReplyAction="http://tempuri.org/IWSMessaging/GetMailMessageByCodeResponse")]
        WSMessaging.DTOMailMessage GetMailMessageByCode(string mailMessageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailMessageByCode", ReplyAction="http://tempuri.org/IWSMessaging/GetMailMessageByCodeResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> GetMailMessageByCodeAsync(string mailMessageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageResponse")]
        WSMessaging.DTOMailMessage[] GetListMailMessage(long mailServiceParamID, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage[]> GetListMailMessageAsync(long mailServiceParamID, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAll", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAllResponse")]
        WSMessaging.DTOMailMessage[] GetListMailMessageAll(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAll", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAllResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessage[]> GetListMailMessageAllAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailMessageResponse")]
        void DeleteMailMessage(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailMessageResponse")]
        System.Threading.Tasks.Task DeleteMailMessageAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageAttachmentResponse")]
        WSMessaging.DTOMailMessageAttachment AddMailMessageAttachment(WSMessaging.DTOMailMessageAttachment mailMsgAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageAttachmentResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAttachment> AddMailMessageAttachmentAsync(WSMessaging.DTOMailMessageAttachment mailMsgAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageAttachmentResponse")]
        void RemoveMailMessageAttachment(long mailMsgAttachmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageAttachmentResponse")]
        System.Threading.Tasks.Task RemoveMailMessageAttachmentAsync(long mailMsgAttachmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAttachmentResponse")]
        WSMessaging.DTOMailMessageAttachment[] GetListMailMessageAttachment(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAttachment", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAttachmentResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAttachment[]> GetListMailMessageAttachmentAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailAttachmentFileName", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailAttachmentFileNameResponse")]
        WSMessaging.DTOMailAttachmentFileName[] GetListMailAttachmentFileName(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailAttachmentFileName", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailAttachmentFileNameResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailAttachmentFileName[]> GetListMailAttachmentFileNameAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageHeaderResponse")]
        WSMessaging.DTOMailMessageHeaders AddMailMessageHeader(WSMessaging.DTOMailMessageHeaders mailMsgHeader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageHeaderResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageHeaders> AddMailMessageHeaderAsync(WSMessaging.DTOMailMessageHeaders mailMsgHeader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageHeaderResponse")]
        void RemoveMailMessageHeader(long mailMsgHeaderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageHeaderResponse")]
        System.Threading.Tasks.Task RemoveMailMessageHeaderAsync(long mailMsgHeaderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageHeaderResponse")]
        WSMessaging.DTOMailMessageHeaders[] GetListMailMessageHeader(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageHeader", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageHeaderResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageHeaders[]> GetListMailMessageHeaderAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageAlternateViewResponse")]
        WSMessaging.DTOMailMessageAlternateViews AddMailMessageAlternateView(WSMessaging.DTOMailMessageAlternateViews mailMsgAlternateView);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/AddMailMessageAlternateViewResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAlternateViews> AddMailMessageAlternateViewAsync(WSMessaging.DTOMailMessageAlternateViews mailMsgAlternateView);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageAlternateViewResponse")]
        void RemoveMailMessageAlternateView(long mailMsgAlternateViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailMessageAlternateViewResponse")]
        System.Threading.Tasks.Task RemoveMailMessageAlternateViewAsync(long mailMsgAlternateViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAlternateViewResponse")]
        WSMessaging.DTOMailMessageAlternateViews[] GetListMailMessageAlternateView(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailMessageAlternateView", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailMessageAlternateViewResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAlternateViews[]> GetListMailMessageAlternateViewAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/AddMailRecipientResponse")]
        WSMessaging.DTOMailRecipient AddMailRecipient(WSMessaging.DTOMailRecipient mailRecipient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/AddMailRecipientResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient> AddMailRecipientAsync(WSMessaging.DTOMailRecipient mailRecipient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientResponse")]
        void RemoveMailRecipient(long mailRecipientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientResponse")]
        System.Threading.Tasks.Task RemoveMailRecipientAsync(long mailRecipientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipientAll", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientAllResponse")]
        void RemoveMailRecipientAll(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipientAll", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientAllResponse")]
        System.Threading.Tasks.Task RemoveMailRecipientAllAsync(long mailMessageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailRecipientResponse")]
        WSMessaging.DTOMailRecipient[] GetListMailRecipient(long mailMessageID, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailRecipientResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient[]> GetListMailRecipientAsync(long mailMessageID, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetMailRecipientResponse")]
        WSMessaging.DTOMailRecipient GetMailRecipient(long mailRecipientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetMailRecipientResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient> GetMailRecipientAsync(long mailRecipientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetCountMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetCountMailRecipientResponse")]
        long GetCountMailRecipient(long mailMessageID, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetCountMailRecipient", ReplyAction="http://tempuri.org/IWSMessaging/GetCountMailRecipientResponse")]
        System.Threading.Tasks.Task<long> GetCountMailRecipientAsync(long mailMessageID, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientStatus", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientStatusResponse")]
        void SetMailRecipientStatus(long msgID, string mailRecipientAddress, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientStatus", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientStatusResponse")]
        System.Threading.Tasks.Task SetMailRecipientStatusAsync(long msgID, string mailRecipientAddress, string recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientStatusWithDescription", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientStatusWithDescriptionResponse")]
        void SetMailRecipientStatusWithDescription(long msgID, string mailRecipientAddress, string recipientStatus, string statusDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientStatusWithDescription", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientStatusWithDescriptionResponse")]
        System.Threading.Tasks.Task SetMailRecipientStatusWithDescriptionAsync(long msgID, string mailRecipientAddress, string recipientStatus, string statusDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CreateMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/CreateMailServiceParameterResponse")]
        WSMessaging.DTOMailServiceParameter CreateMailServiceParameter(WSMessaging.DTOMailServiceParameter dtoMailServiceParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CreateMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/CreateMailServiceParameterResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> CreateMailServiceParameterAsync(WSMessaging.DTOMailServiceParameter dtoMailServiceParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/UpdateMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/UpdateMailServiceParameterResponse")]
        WSMessaging.DTOMailServiceParameter UpdateMailServiceParameter(WSMessaging.DTOMailServiceParameter dtoMailServiceParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/UpdateMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/UpdateMailServiceParameterResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> UpdateMailServiceParameterAsync(WSMessaging.DTOMailServiceParameter dtoMailServiceParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/GetMailServiceParameterResponse")]
        WSMessaging.DTOMailServiceParameter GetMailServiceParameter(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/GetMailServiceParameterResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> GetMailServiceParameterAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailServiceParameterByCode", ReplyAction="http://tempuri.org/IWSMessaging/GetMailServiceParameterByCodeResponse")]
        WSMessaging.DTOMailServiceParameter GetMailServiceParameterByCode(string mailSLACode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailServiceParameterByCode", ReplyAction="http://tempuri.org/IWSMessaging/GetMailServiceParameterByCodeResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> GetMailServiceParameterByCodeAsync(string mailSLACode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailServiceParameterResponse")]
        WSMessaging.DTOMailServiceParameter[] GetListMailServiceParameter(string ownerReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailServiceParameterResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter[]> GetListMailServiceParameterAsync(string ownerReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterResponse")]
        void DeleteMailServiceParameter(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterResponse")]
        System.Threading.Tasks.Task DeleteMailServiceParameterAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterByCode", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterByCodeResponse")]
        void DeleteMailServiceParameterByCode(string mailSLACode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterByCode", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailServiceParameterByCodeResponse")]
        System.Threading.Tasks.Task DeleteMailServiceParameterByCodeAsync(string mailSLACode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailMessageAll", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailMessageAllResponse")]
        void DeleteMailMessageAll(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/DeleteMailMessageAll", ReplyAction="http://tempuri.org/IWSMessaging/DeleteMailMessageAllResponse")]
        System.Threading.Tasks.Task DeleteMailMessageAllAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CheckMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/CheckMailServiceParameterResponse")]
        bool CheckMailServiceParameter(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CheckMailServiceParameter", ReplyAction="http://tempuri.org/IWSMessaging/CheckMailServiceParameterResponse")]
        System.Threading.Tasks.Task<bool> CheckMailServiceParameterAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailServiceParameterActive", ReplyAction="http://tempuri.org/IWSMessaging/SetMailServiceParameterActiveResponse")]
        void SetMailServiceParameterActive(string mailSLACode, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailServiceParameterActive", ReplyAction="http://tempuri.org/IWSMessaging/SetMailServiceParameterActiveResponse")]
        System.Threading.Tasks.Task SetMailServiceParameterActiveAsync(string mailSLACode, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/AddEmailingCampaignResponse")]
        WSMessaging.DTOEmailingCampaign AddEmailingCampaign(WSMessaging.DTOEmailingCampaign emailingCampaign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/AddEmailingCampaignResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign> AddEmailingCampaignAsync(WSMessaging.DTOEmailingCampaign emailingCampaign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/RemoveEmailingCampaignResponse")]
        void RemoveEmailingCampaign(long emailCampaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/RemoveEmailingCampaignResponse")]
        System.Threading.Tasks.Task RemoveEmailingCampaignAsync(long emailCampaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/GetListEmailingCampaignResponse")]
        WSMessaging.DTOEmailingCampaign[] GetListEmailingCampaign(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/GetListEmailingCampaignResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign[]> GetListEmailingCampaignAsync(long mailServiceParamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/GetEmailingCampaignResponse")]
        WSMessaging.DTOEmailingCampaign GetEmailingCampaign(long emailCampaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetEmailingCampaign", ReplyAction="http://tempuri.org/IWSMessaging/GetEmailingCampaignResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign> GetEmailingCampaignAsync(long emailCampaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/AddMailRecipientSourceResponse")]
        WSMessaging.DTOMailRecipientSource AddMailRecipientSource(WSMessaging.DTOMailRecipientSource mailRecipientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/AddMailRecipientSourceResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource> AddMailRecipientSourceAsync(WSMessaging.DTOMailRecipientSource mailRecipientSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientSourceResponse")]
        void RemoveMailRecipientSource(long mailRecipientSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RemoveMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/RemoveMailRecipientSourceResponse")]
        System.Threading.Tasks.Task RemoveMailRecipientSourceAsync(long mailRecipientSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientSourceIsProcessed", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientSourceIsProcessedResponse")]
        void SetMailRecipientSourceIsProcessed(long mailRecipientSourceID, bool isProcessed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SetMailRecipientSourceIsProcessed", ReplyAction="http://tempuri.org/IWSMessaging/SetMailRecipientSourceIsProcessedResponse")]
        System.Threading.Tasks.Task SetMailRecipientSourceIsProcessedAsync(long mailRecipientSourceID, bool isProcessed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddNumberRecipientToProcess", ReplyAction="http://tempuri.org/IWSMessaging/AddNumberRecipientToProcessResponse")]
        void AddNumberRecipientToProcess(long mailRecipientSourceID, long nberRecipient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/AddNumberRecipientToProcess", ReplyAction="http://tempuri.org/IWSMessaging/AddNumberRecipientToProcessResponse")]
        System.Threading.Tasks.Task AddNumberRecipientToProcessAsync(long mailRecipientSourceID, long nberRecipient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailRecipientSourceResponse")]
        WSMessaging.DTOMailRecipientSource[] GetListMailRecipientSource(long campaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetListMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/GetListMailRecipientSourceResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource[]> GetListMailRecipientSourceAsync(long campaignID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/GetMailRecipientSourceResponse")]
        WSMessaging.DTOMailRecipientSource GetMailRecipientSource(long mailRecipientSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/GetMailRecipientSource", ReplyAction="http://tempuri.org/IWSMessaging/GetMailRecipientSourceResponse")]
        System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource> GetMailRecipientSourceAsync(long mailRecipientSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CheckSQLQuery", ReplyAction="http://tempuri.org/IWSMessaging/CheckSQLQueryResponse")]
        long CheckSQLQuery(string sQLstring);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/CheckSQLQuery", ReplyAction="http://tempuri.org/IWSMessaging/CheckSQLQueryResponse")]
        System.Threading.Tasks.Task<long> CheckSQLQueryAsync(string sQLstring);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWSMessaging/SendMessage")]
        void SendMessage(long messageID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWSMessaging/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(long messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RouteMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/RouteMailMessageResponse")]
        void RouteMailMessage(int maxMailToRoute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/RouteMailMessage", ReplyAction="http://tempuri.org/IWSMessaging/RouteMailMessageResponse")]
        System.Threading.Tasks.Task RouteMailMessageAsync(int maxMailToRoute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SendExpressMessage", ReplyAction="http://tempuri.org/IWSMessaging/SendExpressMessageResponse")]
        string SendExpressMessage(string MsgSubject, string MsgBody, bool IsHTML, string ToAddress, string FromAddress, string ReplyAddress, string attachedFileName, byte[] attachedFileStream, string SLACode, string SLAPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSMessaging/SendExpressMessage", ReplyAction="http://tempuri.org/IWSMessaging/SendExpressMessageResponse")]
        System.Threading.Tasks.Task<string> SendExpressMessageAsync(string MsgSubject, string MsgBody, bool IsHTML, string ToAddress, string FromAddress, string ReplyAddress, string attachedFileName, byte[] attachedFileStream, string SLACode, string SLAPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IWSMessagingChannel : WSMessaging.IWSMessaging, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class WSMessagingClient : System.ServiceModel.ClientBase<WSMessaging.IWSMessaging>, WSMessaging.IWSMessaging
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WSMessagingClient() : 
                base(WSMessagingClient.GetDefaultBinding(), WSMessagingClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWSMessaging.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMessagingClient(EndpointConfiguration endpointConfiguration) : 
                base(WSMessagingClient.GetBindingForEndpoint(endpointConfiguration), WSMessagingClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMessagingClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WSMessagingClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMessagingClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WSMessagingClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMessagingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public WSMessaging.DTOMailMessage CreateMailMessage(WSMessaging.DTOMailMessage message)
        {
            return base.Channel.CreateMailMessage(message);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> CreateMailMessageAsync(WSMessaging.DTOMailMessage message)
        {
            return base.Channel.CreateMailMessageAsync(message);
        }
        
        public WSMessaging.DTOMailMessage UpdateMailMessage(WSMessaging.DTOMailMessage message)
        {
            return base.Channel.UpdateMailMessage(message);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> UpdateMailMessageAsync(WSMessaging.DTOMailMessage message)
        {
            return base.Channel.UpdateMailMessageAsync(message);
        }
        
        public WSMessaging.DTOMailMessage GetMailMessage(long mailMessageID)
        {
            return base.Channel.GetMailMessage(mailMessageID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> GetMailMessageAsync(long mailMessageID)
        {
            return base.Channel.GetMailMessageAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailMessage GetMailMessageByCode(string mailMessageCode)
        {
            return base.Channel.GetMailMessageByCode(mailMessageCode);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage> GetMailMessageByCodeAsync(string mailMessageCode)
        {
            return base.Channel.GetMailMessageByCodeAsync(mailMessageCode);
        }
        
        public WSMessaging.DTOMailMessage[] GetListMailMessage(long mailServiceParamID, System.DateTime startDate, System.DateTime endDate)
        {
            return base.Channel.GetListMailMessage(mailServiceParamID, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage[]> GetListMailMessageAsync(long mailServiceParamID, System.DateTime startDate, System.DateTime endDate)
        {
            return base.Channel.GetListMailMessageAsync(mailServiceParamID, startDate, endDate);
        }
        
        public WSMessaging.DTOMailMessage[] GetListMailMessageAll(long mailServiceParamID)
        {
            return base.Channel.GetListMailMessageAll(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessage[]> GetListMailMessageAllAsync(long mailServiceParamID)
        {
            return base.Channel.GetListMailMessageAllAsync(mailServiceParamID);
        }
        
        public void DeleteMailMessage(long mailMessageID)
        {
            base.Channel.DeleteMailMessage(mailMessageID);
        }
        
        public System.Threading.Tasks.Task DeleteMailMessageAsync(long mailMessageID)
        {
            return base.Channel.DeleteMailMessageAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailMessageAttachment AddMailMessageAttachment(WSMessaging.DTOMailMessageAttachment mailMsgAttachment)
        {
            return base.Channel.AddMailMessageAttachment(mailMsgAttachment);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAttachment> AddMailMessageAttachmentAsync(WSMessaging.DTOMailMessageAttachment mailMsgAttachment)
        {
            return base.Channel.AddMailMessageAttachmentAsync(mailMsgAttachment);
        }
        
        public void RemoveMailMessageAttachment(long mailMsgAttachmentID)
        {
            base.Channel.RemoveMailMessageAttachment(mailMsgAttachmentID);
        }
        
        public System.Threading.Tasks.Task RemoveMailMessageAttachmentAsync(long mailMsgAttachmentID)
        {
            return base.Channel.RemoveMailMessageAttachmentAsync(mailMsgAttachmentID);
        }
        
        public WSMessaging.DTOMailMessageAttachment[] GetListMailMessageAttachment(long mailMessageID)
        {
            return base.Channel.GetListMailMessageAttachment(mailMessageID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAttachment[]> GetListMailMessageAttachmentAsync(long mailMessageID)
        {
            return base.Channel.GetListMailMessageAttachmentAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailAttachmentFileName[] GetListMailAttachmentFileName(long mailMessageID)
        {
            return base.Channel.GetListMailAttachmentFileName(mailMessageID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailAttachmentFileName[]> GetListMailAttachmentFileNameAsync(long mailMessageID)
        {
            return base.Channel.GetListMailAttachmentFileNameAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailMessageHeaders AddMailMessageHeader(WSMessaging.DTOMailMessageHeaders mailMsgHeader)
        {
            return base.Channel.AddMailMessageHeader(mailMsgHeader);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageHeaders> AddMailMessageHeaderAsync(WSMessaging.DTOMailMessageHeaders mailMsgHeader)
        {
            return base.Channel.AddMailMessageHeaderAsync(mailMsgHeader);
        }
        
        public void RemoveMailMessageHeader(long mailMsgHeaderID)
        {
            base.Channel.RemoveMailMessageHeader(mailMsgHeaderID);
        }
        
        public System.Threading.Tasks.Task RemoveMailMessageHeaderAsync(long mailMsgHeaderID)
        {
            return base.Channel.RemoveMailMessageHeaderAsync(mailMsgHeaderID);
        }
        
        public WSMessaging.DTOMailMessageHeaders[] GetListMailMessageHeader(long mailMessageID)
        {
            return base.Channel.GetListMailMessageHeader(mailMessageID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageHeaders[]> GetListMailMessageHeaderAsync(long mailMessageID)
        {
            return base.Channel.GetListMailMessageHeaderAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailMessageAlternateViews AddMailMessageAlternateView(WSMessaging.DTOMailMessageAlternateViews mailMsgAlternateView)
        {
            return base.Channel.AddMailMessageAlternateView(mailMsgAlternateView);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAlternateViews> AddMailMessageAlternateViewAsync(WSMessaging.DTOMailMessageAlternateViews mailMsgAlternateView)
        {
            return base.Channel.AddMailMessageAlternateViewAsync(mailMsgAlternateView);
        }
        
        public void RemoveMailMessageAlternateView(long mailMsgAlternateViewID)
        {
            base.Channel.RemoveMailMessageAlternateView(mailMsgAlternateViewID);
        }
        
        public System.Threading.Tasks.Task RemoveMailMessageAlternateViewAsync(long mailMsgAlternateViewID)
        {
            return base.Channel.RemoveMailMessageAlternateViewAsync(mailMsgAlternateViewID);
        }
        
        public WSMessaging.DTOMailMessageAlternateViews[] GetListMailMessageAlternateView(long mailMessageID)
        {
            return base.Channel.GetListMailMessageAlternateView(mailMessageID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailMessageAlternateViews[]> GetListMailMessageAlternateViewAsync(long mailMessageID)
        {
            return base.Channel.GetListMailMessageAlternateViewAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailRecipient AddMailRecipient(WSMessaging.DTOMailRecipient mailRecipient)
        {
            return base.Channel.AddMailRecipient(mailRecipient);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient> AddMailRecipientAsync(WSMessaging.DTOMailRecipient mailRecipient)
        {
            return base.Channel.AddMailRecipientAsync(mailRecipient);
        }
        
        public void RemoveMailRecipient(long mailRecipientID)
        {
            base.Channel.RemoveMailRecipient(mailRecipientID);
        }
        
        public System.Threading.Tasks.Task RemoveMailRecipientAsync(long mailRecipientID)
        {
            return base.Channel.RemoveMailRecipientAsync(mailRecipientID);
        }
        
        public void RemoveMailRecipientAll(long mailMessageID)
        {
            base.Channel.RemoveMailRecipientAll(mailMessageID);
        }
        
        public System.Threading.Tasks.Task RemoveMailRecipientAllAsync(long mailMessageID)
        {
            return base.Channel.RemoveMailRecipientAllAsync(mailMessageID);
        }
        
        public WSMessaging.DTOMailRecipient[] GetListMailRecipient(long mailMessageID, string recipientStatus)
        {
            return base.Channel.GetListMailRecipient(mailMessageID, recipientStatus);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient[]> GetListMailRecipientAsync(long mailMessageID, string recipientStatus)
        {
            return base.Channel.GetListMailRecipientAsync(mailMessageID, recipientStatus);
        }
        
        public WSMessaging.DTOMailRecipient GetMailRecipient(long mailRecipientID)
        {
            return base.Channel.GetMailRecipient(mailRecipientID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipient> GetMailRecipientAsync(long mailRecipientID)
        {
            return base.Channel.GetMailRecipientAsync(mailRecipientID);
        }
        
        public long GetCountMailRecipient(long mailMessageID, string recipientStatus)
        {
            return base.Channel.GetCountMailRecipient(mailMessageID, recipientStatus);
        }
        
        public System.Threading.Tasks.Task<long> GetCountMailRecipientAsync(long mailMessageID, string recipientStatus)
        {
            return base.Channel.GetCountMailRecipientAsync(mailMessageID, recipientStatus);
        }
        
        public void SetMailRecipientStatus(long msgID, string mailRecipientAddress, string recipientStatus)
        {
            base.Channel.SetMailRecipientStatus(msgID, mailRecipientAddress, recipientStatus);
        }
        
        public System.Threading.Tasks.Task SetMailRecipientStatusAsync(long msgID, string mailRecipientAddress, string recipientStatus)
        {
            return base.Channel.SetMailRecipientStatusAsync(msgID, mailRecipientAddress, recipientStatus);
        }
        
        public void SetMailRecipientStatusWithDescription(long msgID, string mailRecipientAddress, string recipientStatus, string statusDescription)
        {
            base.Channel.SetMailRecipientStatusWithDescription(msgID, mailRecipientAddress, recipientStatus, statusDescription);
        }
        
        public System.Threading.Tasks.Task SetMailRecipientStatusWithDescriptionAsync(long msgID, string mailRecipientAddress, string recipientStatus, string statusDescription)
        {
            return base.Channel.SetMailRecipientStatusWithDescriptionAsync(msgID, mailRecipientAddress, recipientStatus, statusDescription);
        }
        
        public WSMessaging.DTOMailServiceParameter CreateMailServiceParameter(WSMessaging.DTOMailServiceParameter dtoMailServiceParam)
        {
            return base.Channel.CreateMailServiceParameter(dtoMailServiceParam);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> CreateMailServiceParameterAsync(WSMessaging.DTOMailServiceParameter dtoMailServiceParam)
        {
            return base.Channel.CreateMailServiceParameterAsync(dtoMailServiceParam);
        }
        
        public WSMessaging.DTOMailServiceParameter UpdateMailServiceParameter(WSMessaging.DTOMailServiceParameter dtoMailServiceParam)
        {
            return base.Channel.UpdateMailServiceParameter(dtoMailServiceParam);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> UpdateMailServiceParameterAsync(WSMessaging.DTOMailServiceParameter dtoMailServiceParam)
        {
            return base.Channel.UpdateMailServiceParameterAsync(dtoMailServiceParam);
        }
        
        public WSMessaging.DTOMailServiceParameter GetMailServiceParameter(long mailServiceParamID)
        {
            return base.Channel.GetMailServiceParameter(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> GetMailServiceParameterAsync(long mailServiceParamID)
        {
            return base.Channel.GetMailServiceParameterAsync(mailServiceParamID);
        }
        
        public WSMessaging.DTOMailServiceParameter GetMailServiceParameterByCode(string mailSLACode)
        {
            return base.Channel.GetMailServiceParameterByCode(mailSLACode);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter> GetMailServiceParameterByCodeAsync(string mailSLACode)
        {
            return base.Channel.GetMailServiceParameterByCodeAsync(mailSLACode);
        }
        
        public WSMessaging.DTOMailServiceParameter[] GetListMailServiceParameter(string ownerReference)
        {
            return base.Channel.GetListMailServiceParameter(ownerReference);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailServiceParameter[]> GetListMailServiceParameterAsync(string ownerReference)
        {
            return base.Channel.GetListMailServiceParameterAsync(ownerReference);
        }
        
        public void DeleteMailServiceParameter(long mailServiceParamID)
        {
            base.Channel.DeleteMailServiceParameter(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task DeleteMailServiceParameterAsync(long mailServiceParamID)
        {
            return base.Channel.DeleteMailServiceParameterAsync(mailServiceParamID);
        }
        
        public void DeleteMailServiceParameterByCode(string mailSLACode)
        {
            base.Channel.DeleteMailServiceParameterByCode(mailSLACode);
        }
        
        public System.Threading.Tasks.Task DeleteMailServiceParameterByCodeAsync(string mailSLACode)
        {
            return base.Channel.DeleteMailServiceParameterByCodeAsync(mailSLACode);
        }
        
        public void DeleteMailMessageAll(long mailServiceParamID)
        {
            base.Channel.DeleteMailMessageAll(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task DeleteMailMessageAllAsync(long mailServiceParamID)
        {
            return base.Channel.DeleteMailMessageAllAsync(mailServiceParamID);
        }
        
        public bool CheckMailServiceParameter(long mailServiceParamID)
        {
            return base.Channel.CheckMailServiceParameter(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckMailServiceParameterAsync(long mailServiceParamID)
        {
            return base.Channel.CheckMailServiceParameterAsync(mailServiceParamID);
        }
        
        public void SetMailServiceParameterActive(string mailSLACode, bool active)
        {
            base.Channel.SetMailServiceParameterActive(mailSLACode, active);
        }
        
        public System.Threading.Tasks.Task SetMailServiceParameterActiveAsync(string mailSLACode, bool active)
        {
            return base.Channel.SetMailServiceParameterActiveAsync(mailSLACode, active);
        }
        
        public WSMessaging.DTOEmailingCampaign AddEmailingCampaign(WSMessaging.DTOEmailingCampaign emailingCampaign)
        {
            return base.Channel.AddEmailingCampaign(emailingCampaign);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign> AddEmailingCampaignAsync(WSMessaging.DTOEmailingCampaign emailingCampaign)
        {
            return base.Channel.AddEmailingCampaignAsync(emailingCampaign);
        }
        
        public void RemoveEmailingCampaign(long emailCampaignID)
        {
            base.Channel.RemoveEmailingCampaign(emailCampaignID);
        }
        
        public System.Threading.Tasks.Task RemoveEmailingCampaignAsync(long emailCampaignID)
        {
            return base.Channel.RemoveEmailingCampaignAsync(emailCampaignID);
        }
        
        public WSMessaging.DTOEmailingCampaign[] GetListEmailingCampaign(long mailServiceParamID)
        {
            return base.Channel.GetListEmailingCampaign(mailServiceParamID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign[]> GetListEmailingCampaignAsync(long mailServiceParamID)
        {
            return base.Channel.GetListEmailingCampaignAsync(mailServiceParamID);
        }
        
        public WSMessaging.DTOEmailingCampaign GetEmailingCampaign(long emailCampaignID)
        {
            return base.Channel.GetEmailingCampaign(emailCampaignID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOEmailingCampaign> GetEmailingCampaignAsync(long emailCampaignID)
        {
            return base.Channel.GetEmailingCampaignAsync(emailCampaignID);
        }
        
        public WSMessaging.DTOMailRecipientSource AddMailRecipientSource(WSMessaging.DTOMailRecipientSource mailRecipientSource)
        {
            return base.Channel.AddMailRecipientSource(mailRecipientSource);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource> AddMailRecipientSourceAsync(WSMessaging.DTOMailRecipientSource mailRecipientSource)
        {
            return base.Channel.AddMailRecipientSourceAsync(mailRecipientSource);
        }
        
        public void RemoveMailRecipientSource(long mailRecipientSourceID)
        {
            base.Channel.RemoveMailRecipientSource(mailRecipientSourceID);
        }
        
        public System.Threading.Tasks.Task RemoveMailRecipientSourceAsync(long mailRecipientSourceID)
        {
            return base.Channel.RemoveMailRecipientSourceAsync(mailRecipientSourceID);
        }
        
        public void SetMailRecipientSourceIsProcessed(long mailRecipientSourceID, bool isProcessed)
        {
            base.Channel.SetMailRecipientSourceIsProcessed(mailRecipientSourceID, isProcessed);
        }
        
        public System.Threading.Tasks.Task SetMailRecipientSourceIsProcessedAsync(long mailRecipientSourceID, bool isProcessed)
        {
            return base.Channel.SetMailRecipientSourceIsProcessedAsync(mailRecipientSourceID, isProcessed);
        }
        
        public void AddNumberRecipientToProcess(long mailRecipientSourceID, long nberRecipient)
        {
            base.Channel.AddNumberRecipientToProcess(mailRecipientSourceID, nberRecipient);
        }
        
        public System.Threading.Tasks.Task AddNumberRecipientToProcessAsync(long mailRecipientSourceID, long nberRecipient)
        {
            return base.Channel.AddNumberRecipientToProcessAsync(mailRecipientSourceID, nberRecipient);
        }
        
        public WSMessaging.DTOMailRecipientSource[] GetListMailRecipientSource(long campaignID)
        {
            return base.Channel.GetListMailRecipientSource(campaignID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource[]> GetListMailRecipientSourceAsync(long campaignID)
        {
            return base.Channel.GetListMailRecipientSourceAsync(campaignID);
        }
        
        public WSMessaging.DTOMailRecipientSource GetMailRecipientSource(long mailRecipientSourceID)
        {
            return base.Channel.GetMailRecipientSource(mailRecipientSourceID);
        }
        
        public System.Threading.Tasks.Task<WSMessaging.DTOMailRecipientSource> GetMailRecipientSourceAsync(long mailRecipientSourceID)
        {
            return base.Channel.GetMailRecipientSourceAsync(mailRecipientSourceID);
        }
        
        public long CheckSQLQuery(string sQLstring)
        {
            return base.Channel.CheckSQLQuery(sQLstring);
        }
        
        public System.Threading.Tasks.Task<long> CheckSQLQueryAsync(string sQLstring)
        {
            return base.Channel.CheckSQLQueryAsync(sQLstring);
        }
        
        public void SendMessage(long messageID)
        {
            base.Channel.SendMessage(messageID);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(long messageID)
        {
            return base.Channel.SendMessageAsync(messageID);
        }
        
        public void RouteMailMessage(int maxMailToRoute)
        {
            base.Channel.RouteMailMessage(maxMailToRoute);
        }
        
        public System.Threading.Tasks.Task RouteMailMessageAsync(int maxMailToRoute)
        {
            return base.Channel.RouteMailMessageAsync(maxMailToRoute);
        }
        
        public string SendExpressMessage(string MsgSubject, string MsgBody, bool IsHTML, string ToAddress, string FromAddress, string ReplyAddress, string attachedFileName, byte[] attachedFileStream, string SLACode, string SLAPassword)
        {
            return base.Channel.SendExpressMessage(MsgSubject, MsgBody, IsHTML, ToAddress, FromAddress, ReplyAddress, attachedFileName, attachedFileStream, SLACode, SLAPassword);
        }
        
        public System.Threading.Tasks.Task<string> SendExpressMessageAsync(string MsgSubject, string MsgBody, bool IsHTML, string ToAddress, string FromAddress, string ReplyAddress, string attachedFileName, byte[] attachedFileStream, string SLACode, string SLAPassword)
        {
            return base.Channel.SendExpressMessageAsync(MsgSubject, MsgBody, IsHTML, ToAddress, FromAddress, ReplyAddress, attachedFileName, attachedFileStream, SLACode, SLAPassword);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWSMessaging))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWSMessaging))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.fideros.com/WSMessaging.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WSMessagingClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWSMessaging);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WSMessagingClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWSMessaging);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IWSMessaging,
        }
    }
}
