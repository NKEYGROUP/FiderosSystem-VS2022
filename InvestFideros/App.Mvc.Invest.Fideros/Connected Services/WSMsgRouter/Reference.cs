//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSMsgRouter
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMessage", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSMsgRouter.OBASMSMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSMsgRouter.OBAMailMessage))]
    public partial class OBAMessage : object
    {
        
        private string BodyField;
        
        private string BodyEncodingField;
        
        private WSMsgRouter.OBAMessageAddress FromField;
        
        private long IDField;
        
        private System.DateTime MessageDateField;
        
        private string MessageIDField;
        
        private System.DateTime MessageSendDateField;
        
        private WSMsgRouter.MessageType MessageTypeField;
        
        private string OBAMessageServiceCodeField;
        
        private string OBAMessageServicePwdField;
        
        private WSMsgRouter.OBAMessagePriority PriorityField;
        
        private WSMsgRouter.OBAMessageAddress SenderField;
        
        private WSMsgRouter.OBAItemValue[] SendingParamsField;
        
        private WSMsgRouter.OBAMessageAddress[] ToListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body
        {
            get
            {
                return this.BodyField;
            }
            set
            {
                this.BodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyEncoding
        {
            get
            {
                return this.BodyEncodingField;
            }
            set
            {
                this.BodyEncodingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessageAddress From
        {
            get
            {
                return this.FromField;
            }
            set
            {
                this.FromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime MessageDate
        {
            get
            {
                return this.MessageDateField;
            }
            set
            {
                this.MessageDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MessageID
        {
            get
            {
                return this.MessageIDField;
            }
            set
            {
                this.MessageIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime MessageSendDate
        {
            get
            {
                return this.MessageSendDateField;
            }
            set
            {
                this.MessageSendDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WSMsgRouter.MessageType MessageType
        {
            get
            {
                return this.MessageTypeField;
            }
            set
            {
                this.MessageTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OBAMessageServiceCode
        {
            get
            {
                return this.OBAMessageServiceCodeField;
            }
            set
            {
                this.OBAMessageServiceCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OBAMessageServicePwd
        {
            get
            {
                return this.OBAMessageServicePwdField;
            }
            set
            {
                this.OBAMessageServicePwdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessagePriority Priority
        {
            get
            {
                return this.PriorityField;
            }
            set
            {
                this.PriorityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessageAddress Sender
        {
            get
            {
                return this.SenderField;
            }
            set
            {
                this.SenderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAItemValue[] SendingParams
        {
            get
            {
                return this.SendingParamsField;
            }
            set
            {
                this.SendingParamsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WSMsgRouter.OBAMessageAddress[] ToList
        {
            get
            {
                return this.ToListField;
            }
            set
            {
                this.ToListField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMessageAddress", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBAMessageAddress : object
    {
        
        private string AddressField;
        
        private string DisplayNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBASMSMessage", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBASMSMessage : WSMsgRouter.OBAMessage
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMailMessage", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBAMailMessage : WSMsgRouter.OBAMessage
    {
        
        private WSMsgRouter.OBAMailAttach[] AttachmentViewsField;
        
        private WSMsgRouter.OBAMailAttach[] AttachmentsField;
        
        private WSMsgRouter.OBAMessageAddress[] BccListField;
        
        private WSMsgRouter.OBAMessageAddress[] CcListField;
        
        private bool IsBodyHtmlField;
        
        private WSMsgRouter.OBAMessageAddress[] ReplyListField;
        
        private WSMsgRouter.SendMessageReport SendReportField;
        
        private WSMsgRouter.MessageStatus StatusField;
        
        private string SubjectField;
        
        private string SubjectEncodingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMailAttach[] AttachmentViews
        {
            get
            {
                return this.AttachmentViewsField;
            }
            set
            {
                this.AttachmentViewsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMailAttach[] Attachments
        {
            get
            {
                return this.AttachmentsField;
            }
            set
            {
                this.AttachmentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessageAddress[] BccList
        {
            get
            {
                return this.BccListField;
            }
            set
            {
                this.BccListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessageAddress[] CcList
        {
            get
            {
                return this.CcListField;
            }
            set
            {
                this.CcListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBodyHtml
        {
            get
            {
                return this.IsBodyHtmlField;
            }
            set
            {
                this.IsBodyHtmlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.OBAMessageAddress[] ReplyList
        {
            get
            {
                return this.ReplyListField;
            }
            set
            {
                this.ReplyListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.SendMessageReport SendReport
        {
            get
            {
                return this.SendReportField;
            }
            set
            {
                this.SendReportField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.MessageStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectEncoding
        {
            get
            {
                return this.SubjectEncodingField;
            }
            set
            {
                this.SubjectEncodingField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum MessageType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MMS = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMessagePriority", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum OBAMessagePriority : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAItemValue", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBAItemValue : object
    {
        
        private string KeyField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendMessageReport", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Utils")]
    public partial class SendMessageReport : object
    {
        
        private string CodeField;
        
        private string MessageField;
        
        private string MsgTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MsgType
        {
            get
            {
                return this.MsgTypeField;
            }
            set
            {
                this.MsgTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMailAttach", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBAMailAttach : object
    {
        
        private string AttachEncodingField;
        
        private WSMsgRouter.AttachmentType AttachmentTypeField;
        
        private string ContentTypeField;
        
        private string FileContentBase64Field;
        
        private string FileNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachEncoding
        {
            get
            {
                return this.AttachEncodingField;
            }
            set
            {
                this.AttachEncodingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.AttachmentType AttachmentType
        {
            get
            {
                return this.AttachmentTypeField;
            }
            set
            {
                this.AttachmentTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType
        {
            get
            {
                return this.ContentTypeField;
            }
            set
            {
                this.ContentTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileContentBase64
        {
            get
            {
                return this.FileContentBase64Field;
            }
            set
            {
                this.FileContentBase64Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageStatus", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum MessageStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentType", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum AttachmentType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        View = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OBAMessageNotification", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class OBAMessageNotification : object
    {
        
        private string DescriptionField;
        
        private string MessageIDField;
        
        private System.DateTime ProcessDateField;
        
        private WSMsgRouter.MessageStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageID
        {
            get
            {
                return this.MessageIDField;
            }
            set
            {
                this.MessageIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProcessDate
        {
            get
            {
                return this.ProcessDateField;
            }
            set
            {
                this.ProcessDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSMsgRouter.MessageStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueType", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum QueueType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MsgQueue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MsgToSendQueue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MsgProcessedQueue = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipientStatus", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public enum RecipientStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unsubscribe = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiveInfos = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcceptCondition = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsClient = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTONWLRecipient", Namespace="http://schemas.datacontract.org/2004/07/Oba.Dom.Messaging.DataClass")]
    public partial class DTONWLRecipient : object
    {
        
        private bool acceptConditionField;
        
        private bool activeField;
        
        private string emailAddressField;
        
        private bool isCompanyField;
        
        private System.DateTime lastSendEmailDateField;
        
        private System.DateTime modificationDateField;
        
        private bool receiveInfosField;
        
        private string recipientField;
        
        private long recipientIDField;
        
        private string tagNameField;
        
        private bool unsubscribeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool acceptCondition
        {
            get
            {
                return this.acceptConditionField;
            }
            set
            {
                this.acceptConditionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAddress
        {
            get
            {
                return this.emailAddressField;
            }
            set
            {
                this.emailAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCompany
        {
            get
            {
                return this.isCompanyField;
            }
            set
            {
                this.isCompanyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lastSendEmailDate
        {
            get
            {
                return this.lastSendEmailDateField;
            }
            set
            {
                this.lastSendEmailDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime modificationDate
        {
            get
            {
                return this.modificationDateField;
            }
            set
            {
                this.modificationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool receiveInfos
        {
            get
            {
                return this.receiveInfosField;
            }
            set
            {
                this.receiveInfosField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipient
        {
            get
            {
                return this.recipientField;
            }
            set
            {
                this.recipientField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long recipientID
        {
            get
            {
                return this.recipientIDField;
            }
            set
            {
                this.recipientIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tagName
        {
            get
            {
                return this.tagNameField;
            }
            set
            {
                this.tagNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool unsubscribe
        {
            get
            {
                return this.unsubscribeField;
            }
            set
            {
                this.unsubscribeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://obatrade.net/webservices/messaging", ConfigurationName="WSMsgRouter.IWSMsgRouter")]
    public interface IWSMsgRouter
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewEMailMessage", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewEMailMessageResponse" +
            "")]
        WSMsgRouter.OBAMailMessage GetNewEMailMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewEMailMessage", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewEMailMessageResponse" +
            "")]
        System.Threading.Tasks.Task<WSMsgRouter.OBAMailMessage> GetNewEMailMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewSMSMessage", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewSMSMessageResponse")]
        WSMsgRouter.OBASMSMessage GetNewSMSMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewSMSMessage", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetNewSMSMessageResponse")]
        System.Threading.Tasks.Task<WSMsgRouter.OBASMSMessage> GetNewSMSMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendMail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendMailResponse")]
        string SendMail(WSMsgRouter.OBAMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendMail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendMailResponse")]
        System.Threading.Tasks.Task<string> SendMailAsync(WSMsgRouter.OBAMailMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendSMS", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendSMSResponse")]
        string SendSMS(WSMsgRouter.OBASMSMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendSMS", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SendSMSResponse")]
        System.Threading.Tasks.Task<string> SendSMSAsync(WSMsgRouter.OBASMSMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageNotification", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageNotificationResp" +
            "onse")]
        WSMsgRouter.OBAMessageNotification GetMessageNotification(string messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageNotification", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageNotificationResp" +
            "onse")]
        System.Threading.Tasks.Task<WSMsgRouter.OBAMessageNotification> GetMessageNotificationAsync(string messageID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/DeleteAllMessages")]
        void DeleteAllMessages(WSMsgRouter.QueueType queueType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/DeleteAllMessages")]
        System.Threading.Tasks.Task DeleteAllMessagesAsync(WSMsgRouter.QueueType queueType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/DeleteMessageFromQueue")]
        void DeleteMessageFromQueue(WSMsgRouter.QueueType queueType, string messageID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/DeleteMessageFromQueue")]
        System.Threading.Tasks.Task DeleteMessageFromQueueAsync(WSMsgRouter.QueueType queueType, string messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetRecipientStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetRecipientStatusResponse" +
            "")]
        void SetRecipientStatus(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetRecipientStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetRecipientStatusResponse" +
            "")]
        System.Threading.Tasks.Task SetRecipientStatusAsync(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetRecipientStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetRecipientStatusResponse" +
            "")]
        bool GetRecipientStatus(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetRecipientStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetRecipientStatusResponse" +
            "")]
        System.Threading.Tasks.Task<bool> GetRecipientStatusAsync(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CreateRecipient", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CreateRecipientResponse")]
        void CreateRecipient(string ownerReference, string recipientName, string emailAddress, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CreateRecipient", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CreateRecipientResponse")]
        System.Threading.Tasks.Task CreateRecipientAsync(string ownerReference, string recipientName, string emailAddress, string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySLACode", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySLACodeR" +
            "esponse")]
        string[] GetListMessageIDBySLACode(string slaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySLACode", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySLACodeR" +
            "esponse")]
        System.Threading.Tasks.Task<string[]> GetListMessageIDBySLACodeAsync(string slaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListProcessedMessageIDB" +
            "yMsgStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListProcessedMessageIDB" +
            "yMsgStatusResponse")]
        string[] GetListProcessedMessageIDByMsgStatus(WSMsgRouter.MessageStatus msgStatus, int topNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListProcessedMessageIDB" +
            "yMsgStatus", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListProcessedMessageIDB" +
            "yMsgStatusResponse")]
        System.Threading.Tasks.Task<string[]> GetListProcessedMessageIDByMsgStatusAsync(WSMsgRouter.MessageStatus msgStatus, int topNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDByEmailAdd" +
            "ress", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDByEmailAdd" +
            "ressResponse")]
        string[] GetListMessageIDByEmailAddress(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDByEmailAdd" +
            "ress", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDByEmailAdd" +
            "ressResponse")]
        System.Threading.Tasks.Task<string[]> GetListMessageIDByEmailAddressAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySMSAddre" +
            "ss", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySMSAddre" +
            "ssResponse")]
        string[] GetListMessageIDBySMSAddress(string smsAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySMSAddre" +
            "ss", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListMessageIDBySMSAddre" +
            "ssResponse")]
        System.Threading.Tasks.Task<string[]> GetListMessageIDBySMSAddressAsync(string smsAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetCount", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetCountResponse")]
        int GetCount(WSMsgRouter.QueueType queueType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetCount", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetCountResponse")]
        System.Threading.Tasks.Task<int> GetCountAsync(WSMsgRouter.QueueType queueType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageSerialized", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageSerializedRespon" +
            "se")]
        string GetMessageSerialized(string messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageSerialized", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetMessageSerializedRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetMessageSerializedAsync(string messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/RouteNewsLetter", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/RouteNewsLetterResponse")]
        void RouteNewsLetter(string emailTagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/RouteNewsLetter", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/RouteNewsLetterResponse")]
        System.Threading.Tasks.Task RouteNewsLetterAsync(string emailTagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetLastDateSendEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetLastDateSendEmailRespon" +
            "se")]
        void SetLastDateSendEmail(string tagName, string emailAddress, System.DateTime sendDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetLastDateSendEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetLastDateSendEmailRespon" +
            "se")]
        System.Threading.Tasks.Task SetLastDateSendEmailAsync(string tagName, string emailAddress, System.DateTime sendDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListNWLRecipient", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListNWLRecipientRespons" +
            "e")]
        WSMsgRouter.DTONWLRecipient[] GetListNWLRecipient(string tagName, bool isUnsubscribe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListNWLRecipient", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/GetListNWLRecipientRespons" +
            "e")]
        System.Threading.Tasks.Task<WSMsgRouter.DTONWLRecipient[]> GetListNWLRecipientAsync(string tagName, bool isUnsubscribe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/UnsubscribeEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/UnsubscribeEmailResponse")]
        bool UnsubscribeEmail(string tagName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/UnsubscribeEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/UnsubscribeEmailResponse")]
        System.Threading.Tasks.Task<bool> UnsubscribeEmailAsync(string tagName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SubscribeToNewsletter", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SubscribeToNewsletterRespo" +
            "nse")]
        void SubscribeToNewsletter(string tagName, string emailAddress, string recipientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SubscribeToNewsletter", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SubscribeToNewsletterRespo" +
            "nse")]
        System.Threading.Tasks.Task SubscribeToNewsletterAsync(string tagName, string emailAddress, string recipientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsUnsubscribeEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsUnsubscribeEmailRes" +
            "ponse")]
        bool CheckIsUnsubscribeEmail(string tagName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsUnsubscribeEmail", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsUnsubscribeEmailRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> CheckIsUnsubscribeEmailAsync(string tagName, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsRegisteredUser", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsRegisteredUserRespo" +
            "nse")]
        bool CheckIsRegisteredUser(string identifierEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsRegisteredUser", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/CheckIsRegisteredUserRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> CheckIsRegisteredUserAsync(string identifierEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/WriteLogInfo", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/WriteLogInfoResponse")]
        void WriteLogInfo(string logType, string logSource, string logUser, string logDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/WriteLogInfo", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/WriteLogInfoResponse")]
        System.Threading.Tasks.Task WriteLogInfoAsync(string logType, string logSource, string logUser, string logDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetUserClickInfos", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetUserClickInfosResponse")]
        void SetUserClickInfos(string webSite, string userInfos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetUserClickInfos", ReplyAction="http://obatrade.net/webservices/messaging/IWSMsgRouter/SetUserClickInfosResponse")]
        System.Threading.Tasks.Task SetUserClickInfosAsync(string webSite, string userInfos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IWSMsgRouterChannel : WSMsgRouter.IWSMsgRouter, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class WSMsgRouterClient : System.ServiceModel.ClientBase<WSMsgRouter.IWSMsgRouter>, WSMsgRouter.IWSMsgRouter
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WSMsgRouterClient() : 
                base(WSMsgRouterClient.GetDefaultBinding(), WSMsgRouterClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWSMsgRouter.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMsgRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(WSMsgRouterClient.GetBindingForEndpoint(endpointConfiguration), WSMsgRouterClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMsgRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WSMsgRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMsgRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WSMsgRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSMsgRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public WSMsgRouter.OBAMailMessage GetNewEMailMessage()
        {
            return base.Channel.GetNewEMailMessage();
        }
        
        public System.Threading.Tasks.Task<WSMsgRouter.OBAMailMessage> GetNewEMailMessageAsync()
        {
            return base.Channel.GetNewEMailMessageAsync();
        }
        
        public WSMsgRouter.OBASMSMessage GetNewSMSMessage()
        {
            return base.Channel.GetNewSMSMessage();
        }
        
        public System.Threading.Tasks.Task<WSMsgRouter.OBASMSMessage> GetNewSMSMessageAsync()
        {
            return base.Channel.GetNewSMSMessageAsync();
        }
        
        public string SendMail(WSMsgRouter.OBAMailMessage message)
        {
            return base.Channel.SendMail(message);
        }
        
        public System.Threading.Tasks.Task<string> SendMailAsync(WSMsgRouter.OBAMailMessage message)
        {
            return base.Channel.SendMailAsync(message);
        }
        
        public string SendSMS(WSMsgRouter.OBASMSMessage message)
        {
            return base.Channel.SendSMS(message);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSAsync(WSMsgRouter.OBASMSMessage message)
        {
            return base.Channel.SendSMSAsync(message);
        }
        
        public WSMsgRouter.OBAMessageNotification GetMessageNotification(string messageID)
        {
            return base.Channel.GetMessageNotification(messageID);
        }
        
        public System.Threading.Tasks.Task<WSMsgRouter.OBAMessageNotification> GetMessageNotificationAsync(string messageID)
        {
            return base.Channel.GetMessageNotificationAsync(messageID);
        }
        
        public void DeleteAllMessages(WSMsgRouter.QueueType queueType)
        {
            base.Channel.DeleteAllMessages(queueType);
        }
        
        public System.Threading.Tasks.Task DeleteAllMessagesAsync(WSMsgRouter.QueueType queueType)
        {
            return base.Channel.DeleteAllMessagesAsync(queueType);
        }
        
        public void DeleteMessageFromQueue(WSMsgRouter.QueueType queueType, string messageID)
        {
            base.Channel.DeleteMessageFromQueue(queueType, messageID);
        }
        
        public System.Threading.Tasks.Task DeleteMessageFromQueueAsync(WSMsgRouter.QueueType queueType, string messageID)
        {
            return base.Channel.DeleteMessageFromQueueAsync(queueType, messageID);
        }
        
        public void SetRecipientStatus(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus, bool active)
        {
            base.Channel.SetRecipientStatus(ownerReference, emailAddress, recipientStatus, active);
        }
        
        public System.Threading.Tasks.Task SetRecipientStatusAsync(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus, bool active)
        {
            return base.Channel.SetRecipientStatusAsync(ownerReference, emailAddress, recipientStatus, active);
        }
        
        public bool GetRecipientStatus(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus)
        {
            return base.Channel.GetRecipientStatus(ownerReference, emailAddress, recipientStatus);
        }
        
        public System.Threading.Tasks.Task<bool> GetRecipientStatusAsync(string ownerReference, string emailAddress, WSMsgRouter.RecipientStatus recipientStatus)
        {
            return base.Channel.GetRecipientStatusAsync(ownerReference, emailAddress, recipientStatus);
        }
        
        public void CreateRecipient(string ownerReference, string recipientName, string emailAddress, string CompanyName)
        {
            base.Channel.CreateRecipient(ownerReference, recipientName, emailAddress, CompanyName);
        }
        
        public System.Threading.Tasks.Task CreateRecipientAsync(string ownerReference, string recipientName, string emailAddress, string CompanyName)
        {
            return base.Channel.CreateRecipientAsync(ownerReference, recipientName, emailAddress, CompanyName);
        }
        
        public string[] GetListMessageIDBySLACode(string slaCode)
        {
            return base.Channel.GetListMessageIDBySLACode(slaCode);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListMessageIDBySLACodeAsync(string slaCode)
        {
            return base.Channel.GetListMessageIDBySLACodeAsync(slaCode);
        }
        
        public string[] GetListProcessedMessageIDByMsgStatus(WSMsgRouter.MessageStatus msgStatus, int topNumber)
        {
            return base.Channel.GetListProcessedMessageIDByMsgStatus(msgStatus, topNumber);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListProcessedMessageIDByMsgStatusAsync(WSMsgRouter.MessageStatus msgStatus, int topNumber)
        {
            return base.Channel.GetListProcessedMessageIDByMsgStatusAsync(msgStatus, topNumber);
        }
        
        public string[] GetListMessageIDByEmailAddress(string emailAddress)
        {
            return base.Channel.GetListMessageIDByEmailAddress(emailAddress);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListMessageIDByEmailAddressAsync(string emailAddress)
        {
            return base.Channel.GetListMessageIDByEmailAddressAsync(emailAddress);
        }
        
        public string[] GetListMessageIDBySMSAddress(string smsAddress)
        {
            return base.Channel.GetListMessageIDBySMSAddress(smsAddress);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListMessageIDBySMSAddressAsync(string smsAddress)
        {
            return base.Channel.GetListMessageIDBySMSAddressAsync(smsAddress);
        }
        
        public int GetCount(WSMsgRouter.QueueType queueType)
        {
            return base.Channel.GetCount(queueType);
        }
        
        public System.Threading.Tasks.Task<int> GetCountAsync(WSMsgRouter.QueueType queueType)
        {
            return base.Channel.GetCountAsync(queueType);
        }
        
        public string GetMessageSerialized(string messageID)
        {
            return base.Channel.GetMessageSerialized(messageID);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageSerializedAsync(string messageID)
        {
            return base.Channel.GetMessageSerializedAsync(messageID);
        }
        
        public void RouteNewsLetter(string emailTagName)
        {
            base.Channel.RouteNewsLetter(emailTagName);
        }
        
        public System.Threading.Tasks.Task RouteNewsLetterAsync(string emailTagName)
        {
            return base.Channel.RouteNewsLetterAsync(emailTagName);
        }
        
        public void SetLastDateSendEmail(string tagName, string emailAddress, System.DateTime sendDate)
        {
            base.Channel.SetLastDateSendEmail(tagName, emailAddress, sendDate);
        }
        
        public System.Threading.Tasks.Task SetLastDateSendEmailAsync(string tagName, string emailAddress, System.DateTime sendDate)
        {
            return base.Channel.SetLastDateSendEmailAsync(tagName, emailAddress, sendDate);
        }
        
        public WSMsgRouter.DTONWLRecipient[] GetListNWLRecipient(string tagName, bool isUnsubscribe)
        {
            return base.Channel.GetListNWLRecipient(tagName, isUnsubscribe);
        }
        
        public System.Threading.Tasks.Task<WSMsgRouter.DTONWLRecipient[]> GetListNWLRecipientAsync(string tagName, bool isUnsubscribe)
        {
            return base.Channel.GetListNWLRecipientAsync(tagName, isUnsubscribe);
        }
        
        public bool UnsubscribeEmail(string tagName, string emailAddress)
        {
            return base.Channel.UnsubscribeEmail(tagName, emailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> UnsubscribeEmailAsync(string tagName, string emailAddress)
        {
            return base.Channel.UnsubscribeEmailAsync(tagName, emailAddress);
        }
        
        public void SubscribeToNewsletter(string tagName, string emailAddress, string recipientName)
        {
            base.Channel.SubscribeToNewsletter(tagName, emailAddress, recipientName);
        }
        
        public System.Threading.Tasks.Task SubscribeToNewsletterAsync(string tagName, string emailAddress, string recipientName)
        {
            return base.Channel.SubscribeToNewsletterAsync(tagName, emailAddress, recipientName);
        }
        
        public bool CheckIsUnsubscribeEmail(string tagName, string emailAddress)
        {
            return base.Channel.CheckIsUnsubscribeEmail(tagName, emailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIsUnsubscribeEmailAsync(string tagName, string emailAddress)
        {
            return base.Channel.CheckIsUnsubscribeEmailAsync(tagName, emailAddress);
        }
        
        public bool CheckIsRegisteredUser(string identifierEmail)
        {
            return base.Channel.CheckIsRegisteredUser(identifierEmail);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIsRegisteredUserAsync(string identifierEmail)
        {
            return base.Channel.CheckIsRegisteredUserAsync(identifierEmail);
        }
        
        public void WriteLogInfo(string logType, string logSource, string logUser, string logDescription)
        {
            base.Channel.WriteLogInfo(logType, logSource, logUser, logDescription);
        }
        
        public System.Threading.Tasks.Task WriteLogInfoAsync(string logType, string logSource, string logUser, string logDescription)
        {
            return base.Channel.WriteLogInfoAsync(logType, logSource, logUser, logDescription);
        }
        
        public void SetUserClickInfos(string webSite, string userInfos)
        {
            base.Channel.SetUserClickInfos(webSite, userInfos);
        }
        
        public System.Threading.Tasks.Task SetUserClickInfosAsync(string webSite, string userInfos)
        {
            return base.Channel.SetUserClickInfosAsync(webSite, userInfos);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWSMsgRouter))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWSMsgRouter))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.fideros.com/WSMsgRouter.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WSMsgRouterClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWSMsgRouter);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WSMsgRouterClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWSMsgRouter);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IWSMsgRouter,
        }
    }
}
